# Type Definitions

type Household {
    eircode: String!
    numberOfOccupants: Int!
    maxNumberOfOccupants: Int!
    ownerOccupied: Boolean!
    pets: [Pet]
}

type Pet {
    id: ID!
    name: String!
    animalType: String!
    breed: String!
    age: Int!
    household: Household
}

type Statistics {
    averagePetAge: Float!
    oldestPetAge: Int!
    emptyHouseholds: Int!
    fullHouseholds: Int!
}

# Query Definitions

type Query {
    # Get all pets
    allPets: [Pet!]!

    # Get all households
    allHouseholds: [Household!]!

    householdsWithNoPets: [Household!]!

    # Get a household by eircode
    household(eircode: String!): Household

    # Get all pets by animal type
    petsByAnimalType(animalType: String!): [Pet!]!

    # Get a pet by ID
    pet(id: ID!): Pet

    # Get statistics
    statistics: Statistics!
}

# Input Types

input HouseholdInput {
    eircode: String!
    numberOfOccupants: Int!
    maxNumberOfOccupants: Int!
    ownerOccupied: Boolean!
}

input PetInput {
name: String!
animalType: String!
breed: String!
age: Int!
householdId: Int!
}

input ChangePetNameInput {
    id: ID!
    newName: String!
}

# Mutation Definitions

type Mutation {
    # Pet Mutations
    createPet(input: PetInput!): Pet!
    deletePet(id: ID!): Boolean!
    changePetName(input: ChangePetNameInput!): Pet!

    # Household Mutations
    createHousehold(input: HouseholdInput!): Household!
    deleteHousehold(eircode: String!): Boolean!
}